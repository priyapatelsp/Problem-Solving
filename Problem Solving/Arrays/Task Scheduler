Task Scheduler

class Solution {
    public int leastInterval(char[] tasks, int n) {
        int result=0;
        Map<Character,Integer>mp=new HashMap<>();
        PriorityQueue<Integer> pq
            = new PriorityQueue<Integer>(
                Collections.reverseOrder());
        for(int i=0;i<tasks.length;i++){
            mp.put(tasks[i],mp.getOrDefault(tasks[i],0)+1);
        }
        for (Map.Entry<Character, Integer> entry : mp.entrySet()) {
            pq.add(entry.getValue());
        }

        while(!pq.isEmpty()){
            List<Integer>ls=new ArrayList<>();
            int t=0;
            for(int i=0;i<=n;i++){
                if(!pq.isEmpty()){
                    ls.add(pq.poll()-1);
                    t++;
                }
            }

            for(int i: ls){
                if(i>0)pq.add(i);
            }
            result+=(pq.isEmpty())?t:n+1;
        }
        return result;


    }
}