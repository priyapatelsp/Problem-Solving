majority element
-----------------

// this require space for a map 
static int majorityElement(int a[], int size)
    {
        if(size==1)return a[0];
        HashMap<Integer,Integer>map=new HashMap<>();
        for(int i=0;i<size;i++){
            if(map.containsKey(a[i])){
                map.put(a[i],map.get(a[i])+1);
                if(map.get(a[i])>(size/2))return a[i];
            }else{
                map.put(a[i],1);
            }
            
        }
        return -1;
       
    }

// more optimal approach is to get the 

static int majorityElement(int a[], int size)
    {
       int count=1;
       int majorEle=a[0];
       for(int i=1;i<size;i++){
           if(majorEle==a[i]){
               count++;
           }else{
               count--;
           }
           if(count==0){
               majorEle=a[i];
               count++;
           }
       }
       count=0;
       for(int i=0;i<size;i++){
           if(majorEle==a[i])count++;
       }
       if(count>size/2){
           return majorEle;
       }else{
           return -1;
       }
       
       
    }