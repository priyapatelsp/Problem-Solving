Find the string in grid
--------------------------
public int[][] searchWord(char[][] grid, String word)
    {
        // Code here
         int n = grid.length;
        int m = grid[0].length; // finding the no of rows and coloumns in the grid
        int row[] = {-1,-1,0,1,1,1,0,-1};
        int col[] = {0,1,1,1,0,-1,-1,-1}; // these row and col will give us all the 8th directions
        ArrayList<ArrayList<Integer>>list = new ArrayList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==word.charAt(0)){
                    int res =0;
                    for(int k=0;k<8;k++){
                        int r=i+row[k]; // current row and col value m yeh add karega toh
                        int c=j+col[k]; // it will move in the eight directions around it
                        int count =0 ;
                        if(word.length()>1){
                           if(issafe(r, c, 1, grid, word, n, m)){
                            count =solve(r, c, 2, grid, word, n, m, row[k], col[k]);
                            if(count ==1){
                                res = 1;
                                break;
                            }
                           }
                        }else{
                            res =1;
                        }
                    }
                    if(res==1){
                        ArrayList<Integer>abc = new ArrayList<>();
                        abc.add(i);
                        abc.add(j);
                        list.add(abc);
                    }
                }
             }
        }
           int arr[][] = new int[list.size()][2];
           for(int i =0;i<list.size();i++){
               arr[i][0]=list.get(i).get(0);
               arr[i][1]=list.get(i).get(1);

           }
     return  arr;
    }
     public static boolean issafe(int i,int j,int k,char[][] gridio,String text,int n,int m){
   // this if condition makes sure that loops stays in bound and if char is matching only then persure in that direction
    if(i>=0&&i<n&&j>=0&&j<m&& gridio[i][j]==text.charAt(k)){
        return true;
    }

        return false;
     }


     public static int solve(int i,int j ,int k, char[][]grid, String word ,int n ,int m ,int row,int col){
  if(k==word.length()){
    return 1;
  }
  if(issafe(i+row, j+col, k, grid, word, n, m)){
    int count = solve(i+row, j+col, k+1, grid, word, n, m, row, col);
    if(count==1){
        return 1;
    }
}
    return 0;


     }